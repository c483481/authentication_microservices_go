version: "3.8"

services:
  broker-services:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/Dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-services:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
    environment:
      DATABASE_URL: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-services:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mongo
    environment:
      MONGO_URI: mongodb://mongo:27017
      MONGO_USERNAME: admin
      MONGO_PASSWORD: password

  mail-services:
    build:
      context: ./../mailer-service
      dockerfile: ./../mailer-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mailhog
    environment:
      SMTP_DOMAIN: localhost
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USERNAME: ""
      SMTP_PASSWORD: ""
      SMTP_ENCRYPTION: none
      SMTP_FROM_ADDRESS: "john.smith@example.com"
      SMTP_FROM_NAME: "John Smith"

  postgres:
    image: "postgres:14.2"
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: "mongo:4.2.16-bionic"
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "8026:8025"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
